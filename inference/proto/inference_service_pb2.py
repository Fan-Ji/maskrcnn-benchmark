# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: inference_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='inference_service.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x17inference_service.proto\"n\n\x10InferenceOptions\x12\x17\n\x0f\x65xclude_cropped\x18\x01 \x01(\x08\x12\x11\n\tarea_dist\x18\x02 \x01(\x08\x12\x14\n\x0c\x65llipse_dist\x18\x03 \x01(\x08\x12\x18\n\x10image_batch_size\x18\x04 \x01(\x05\"^\n\x11ImageBatchRequest\x12\x1e\n\x03opt\x18\x01 \x01(\x0b\x32\x11.InferenceOptions\x12\x0e\n\x06images\x18\x02 \x03(\x0c\x12\x19\n\x11num_sample_images\x18\x03 \x01(\x05\"i\n\tDetection\x12\x10\n\x08\x63\x65nter_x\x18\x01 \x01(\x01\x12\x10\n\x08\x63\x65nter_y\x18\x02 \x01(\x01\x12\x0c\n\x04\x61rea\x18\x03 \x01(\x01\x12\x19\n\x07\x65llipse\x18\x04 \x01(\x0b\x32\x08.Ellipse\x12\x0f\n\x07\x63ropped\x18\x05 \x01(\x08\"0\n\x07\x45llipse\x12\x11\n\tlong_axis\x18\x01 \x01(\x01\x12\x12\n\nshort_axis\x18\x02 \x01(\x01\"B\n\x06Result\x12\x18\n\x10processed_images\x18\x01 \x01(\x05\x12\x1e\n\ndetections\x18\x02 \x03(\x0b\x32\n.Detection\"A\n\x0fInferenceResult\x12\x15\n\rsample_images\x18\x01 \x03(\x0c\x12\x17\n\x06result\x18\x02 \x01(\x0b\x32\x07.Result2H\n\tInference\x12;\n\x0fStreamInference\x12\x12.ImageBatchRequest\x1a\x10.InferenceResult(\x01\x30\x01\x62\x06proto3')
)




_INFERENCEOPTIONS = _descriptor.Descriptor(
  name='InferenceOptions',
  full_name='InferenceOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exclude_cropped', full_name='InferenceOptions.exclude_cropped', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='area_dist', full_name='InferenceOptions.area_dist', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ellipse_dist', full_name='InferenceOptions.ellipse_dist', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image_batch_size', full_name='InferenceOptions.image_batch_size', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=27,
  serialized_end=137,
)


_IMAGEBATCHREQUEST = _descriptor.Descriptor(
  name='ImageBatchRequest',
  full_name='ImageBatchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='opt', full_name='ImageBatchRequest.opt', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='images', full_name='ImageBatchRequest.images', index=1,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_sample_images', full_name='ImageBatchRequest.num_sample_images', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=139,
  serialized_end=233,
)


_DETECTION = _descriptor.Descriptor(
  name='Detection',
  full_name='Detection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='center_x', full_name='Detection.center_x', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='center_y', full_name='Detection.center_y', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='area', full_name='Detection.area', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ellipse', full_name='Detection.ellipse', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cropped', full_name='Detection.cropped', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=235,
  serialized_end=340,
)


_ELLIPSE = _descriptor.Descriptor(
  name='Ellipse',
  full_name='Ellipse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='long_axis', full_name='Ellipse.long_axis', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='short_axis', full_name='Ellipse.short_axis', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=342,
  serialized_end=390,
)


_RESULT = _descriptor.Descriptor(
  name='Result',
  full_name='Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='processed_images', full_name='Result.processed_images', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='detections', full_name='Result.detections', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=392,
  serialized_end=458,
)


_INFERENCERESULT = _descriptor.Descriptor(
  name='InferenceResult',
  full_name='InferenceResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sample_images', full_name='InferenceResult.sample_images', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='InferenceResult.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=460,
  serialized_end=525,
)

_IMAGEBATCHREQUEST.fields_by_name['opt'].message_type = _INFERENCEOPTIONS
_DETECTION.fields_by_name['ellipse'].message_type = _ELLIPSE
_RESULT.fields_by_name['detections'].message_type = _DETECTION
_INFERENCERESULT.fields_by_name['result'].message_type = _RESULT
DESCRIPTOR.message_types_by_name['InferenceOptions'] = _INFERENCEOPTIONS
DESCRIPTOR.message_types_by_name['ImageBatchRequest'] = _IMAGEBATCHREQUEST
DESCRIPTOR.message_types_by_name['Detection'] = _DETECTION
DESCRIPTOR.message_types_by_name['Ellipse'] = _ELLIPSE
DESCRIPTOR.message_types_by_name['Result'] = _RESULT
DESCRIPTOR.message_types_by_name['InferenceResult'] = _INFERENCERESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

InferenceOptions = _reflection.GeneratedProtocolMessageType('InferenceOptions', (_message.Message,), {
  'DESCRIPTOR' : _INFERENCEOPTIONS,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:InferenceOptions)
  })
_sym_db.RegisterMessage(InferenceOptions)

ImageBatchRequest = _reflection.GeneratedProtocolMessageType('ImageBatchRequest', (_message.Message,), {
  'DESCRIPTOR' : _IMAGEBATCHREQUEST,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:ImageBatchRequest)
  })
_sym_db.RegisterMessage(ImageBatchRequest)

Detection = _reflection.GeneratedProtocolMessageType('Detection', (_message.Message,), {
  'DESCRIPTOR' : _DETECTION,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:Detection)
  })
_sym_db.RegisterMessage(Detection)

Ellipse = _reflection.GeneratedProtocolMessageType('Ellipse', (_message.Message,), {
  'DESCRIPTOR' : _ELLIPSE,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:Ellipse)
  })
_sym_db.RegisterMessage(Ellipse)

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), {
  'DESCRIPTOR' : _RESULT,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:Result)
  })
_sym_db.RegisterMessage(Result)

InferenceResult = _reflection.GeneratedProtocolMessageType('InferenceResult', (_message.Message,), {
  'DESCRIPTOR' : _INFERENCERESULT,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:InferenceResult)
  })
_sym_db.RegisterMessage(InferenceResult)



_INFERENCE = _descriptor.ServiceDescriptor(
  name='Inference',
  full_name='Inference',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=527,
  serialized_end=599,
  methods=[
  _descriptor.MethodDescriptor(
    name='StreamInference',
    full_name='Inference.StreamInference',
    index=0,
    containing_service=None,
    input_type=_IMAGEBATCHREQUEST,
    output_type=_INFERENCERESULT,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERENCE)

DESCRIPTOR.services_by_name['Inference'] = _INFERENCE

# @@protoc_insertion_point(module_scope)
